<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security-4.2.xsd ">

    <!-- 权限不拦截静态资源 -->
	<http pattern="/js/**/*" security="none"/>
	<http pattern="/css/**/*" security="none"/>
	<http pattern="/img/**/*" security="none"/>
	<http pattern="/**/*.js" security="none"/>
	<http pattern="/**/*.css" security="none"/>
	<http pattern="/**/*.png*" security="none"/>
	<http pattern="/**/*.jpg*" security="none"/>
	<http pattern="/**/*.gif*" security="none"/>
	<http pattern="/**/*.ico" security="none"/>
	<http pattern="/index.jsp" security="none"/>
	<http pattern="/**/login.html" security="none"/>
	<http pattern="/**/*register*" security="none"/>
	<http pattern="/*check*" security="none"/>
	<http pattern="/*Menu" security="none"/>
	<http pattern="/404.html" security="none"/>
	<http pattern="/500.html" security="none"/>
	<http pattern="/test" security="none"/>
	<http pattern="/timeout.html" security="none"/>
	<http pattern="/logout.html" security="none"/>
<!--     <http pattern="/**/*" security="none"/> -->
	<http auto-config="false" use-expressions="true" >
		<csrf disabled="true"/>
		<form-login
                login-page="/login.html"
                authentication-failure-url ="/login.html?error=error"
                authentication-success-handler-ref="customAuthenticationSuccessHandler"
                />
		<logout logout-url="/logout" logout-success-url="/logout.html" />
		<session-management invalid-session-url="/timeout.html" />
		<custom-filter ref="customFilter" before="FILTER_SECURITY_INTERCEPTOR"/> 
	</http>
	
  	<beans:bean id="customFilter" 
		class="com.demo.base.security.CustomFilterSecurityInterceptor">
		<beans:property name="authenticationManager" 
			ref="authenticationManager"/>
		<beans:property name="accessDecisionManager" 
			ref="customAccessDecisionManager"/>
		<beans:property name="securityMetadataSource" 
			ref="customSecurityMetadataSource"/>
	</beans:bean>
	<!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色去访问。11/3/23 -->
	<beans:bean id="customSecurityMetadataSource"
		class="com.demo.base.security.CustomInvocationSecurityMetadataSourceService">
	</beans:bean> 
	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源。11/3/23 -->
	<beans:bean id="customAccessDecisionManager"
		class="com.demo.base.security.CustomAccessDecisionManager">
	</beans:bean>

	<!-- 注意能够为authentication-manager 设置alias别名  -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService">
			 <password-encoder ref="customPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
</beans:beans>