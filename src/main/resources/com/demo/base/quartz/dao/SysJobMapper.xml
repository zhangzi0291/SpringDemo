<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.base.quartz.dao.SysJobDao" >
  <resultMap id="BaseResultMap" type="com.demo.base.quartz.entity.SysJob" >
    <id column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_group" property="jobGroup" jdbcType="VARCHAR" />
    <result column="job_status" property="jobStatus" jdbcType="VARCHAR" />
    <result column="cron_expression" property="cronExpression" jdbcType="VARCHAR" />
    <result column="job_desc" property="jobDesc" jdbcType="VARCHAR" />
    <result column="job_class" property="jobClass" jdbcType="VARCHAR" />
    <result column="job_starttime" property="jobStarttime" jdbcType="TIMESTAMP" />
    <result column="job_endtime" property="jobEndtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    job_id, job_name, job_group, job_status, cron_expression, job_desc, job_class, job_starttime, 
    job_endtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.demo.base.quartz.entity.SysJobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.pageSize} offset #{page.begin}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_job
    where job_id = #{jobId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_job
    where job_id = #{jobId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.base.quartz.entity.SysJobExample" >
    delete from sys_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.base.quartz.entity.SysJob" >
    insert into sys_job (job_id, job_name, job_group, 
      job_status, cron_expression, job_desc, 
      job_class, job_starttime, job_endtime
      )
    values (#{jobId,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, 
      #{jobStatus,jdbcType=VARCHAR}, #{cronExpression,jdbcType=VARCHAR}, #{jobDesc,jdbcType=VARCHAR}, 
      #{jobClass,jdbcType=VARCHAR}, #{jobStarttime,jdbcType=TIMESTAMP}, #{jobEndtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.base.quartz.entity.SysJob" >
    insert into sys_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobGroup != null" >
        job_group,
      </if>
      <if test="jobStatus != null" >
        job_status,
      </if>
      <if test="cronExpression != null" >
        cron_expression,
      </if>
      <if test="jobDesc != null" >
        job_desc,
      </if>
      <if test="jobClass != null" >
        job_class,
      </if>
      <if test="jobStarttime != null" >
        job_starttime,
      </if>
      <if test="jobEndtime != null" >
        job_endtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null" >
        #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="jobClass != null" >
        #{jobClass,jdbcType=VARCHAR},
      </if>
      <if test="jobStarttime != null" >
        #{jobStarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobEndtime != null" >
        #{jobEndtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.base.quartz.entity.SysJobExample" resultType="java.lang.Integer" >
    select count(*) from sys_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_job
    <set >
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobGroup != null" >
        job_group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStatus != null" >
        job_status = #{record.jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cronExpression != null" >
        cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.jobDesc != null" >
        job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.jobClass != null" >
        job_class = #{record.jobClass,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStarttime != null" >
        job_starttime = #{record.jobStarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jobEndtime != null" >
        job_endtime = #{record.jobEndtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_job
    set job_id = #{record.jobId,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_group = #{record.jobGroup,jdbcType=VARCHAR},
      job_status = #{record.jobStatus,jdbcType=VARCHAR},
      cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
      job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      job_class = #{record.jobClass,jdbcType=VARCHAR},
      job_starttime = #{record.jobStarttime,jdbcType=TIMESTAMP},
      job_endtime = #{record.jobEndtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.base.quartz.entity.SysJob" >
    update sys_job
    <set >
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        job_group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        job_status = #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null" >
        job_desc = #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="jobClass != null" >
        job_class = #{jobClass,jdbcType=VARCHAR},
      </if>
      <if test="jobStarttime != null" >
        job_starttime = #{jobStarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobEndtime != null" >
        job_endtime = #{jobEndtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.base.quartz.entity.SysJob" >
    update sys_job
    set job_name = #{jobName,jdbcType=VARCHAR},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      job_status = #{jobStatus,jdbcType=VARCHAR},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      job_desc = #{jobDesc,jdbcType=VARCHAR},
      job_class = #{jobClass,jdbcType=VARCHAR},
      job_starttime = #{jobStarttime,jdbcType=TIMESTAMP},
      job_endtime = #{jobEndtime,jdbcType=TIMESTAMP}
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
</mapper>